---
// VideoCard.astro
interface Props {
  title: string;
  thumbnailUrl: string;
  videoUrl: string;
  sourceCodeUrl?: string;
}

const { title, thumbnailUrl, videoUrl, sourceCodeUrl } = Astro.props;
---

<article class="video-card">
  <a href={videoUrl} class="video-thumbnail">
    <div class="play-button">
      <svg viewBox="0 0 86 86" fill="none">
        <path 
          fill="currentColor"
          fill-rule="evenodd" 
          d="M43 85.25c23.335 0 42.25-18.915 42.25-42.25S66.335.75 43 .75.75 19.665.75 43 19.665 85.25 43 85.25M61.52 38.74a4.876 4.876 0 0 1 0 8.524L37.242 60.749A4.874 4.874 0 0 1 30 56.49V29.51c0-3.713 3.995-6.066 7.241-4.26L61.52 38.74Z"
        />
      </svg>
    </div>
    <img 
      src={thumbnailUrl} 
      alt={`Thumbnail for ${title}`}
      width="320"
      height="180"
      loading="lazy"
    />
  </a>
  
  <div class="content">
    <h3>
      <a href={videoUrl}>{title}</a>
    </h3>
    <div class="links">
      <a href={videoUrl} class="link">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
          <path stroke-linecap="round" stroke-linejoin="round" d="m15.75 10.5 4.72-4.72a.75.75 0 0 1 1.28.53v11.38a.75.75 0 0 1-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 0 0 2.25-2.25v-9a2.25 2.25 0 0 0-2.25-2.25h-9A2.25 2.25 0 0 0 2.25 7.5v9a2.25 2.25 0 0 0 2.25 2.25Z" />
        </svg>
        Video
      </a>
      
      {sourceCodeUrl && (
        <a href={sourceCodeUrl} class="link">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M9 19c-4.3 1.4-4.3-2.5-6-3m12 5v-3.5c0-1 .1-1.4-.5-2 2.8-.3 5.5-1.4 5.5-6a4.6 4.6 0 0 0-1.3-3.2 4.2 4.2 0 0 0-.1-3.2s-1.1-.3-3.5 1.3a12.3 12.3 0 0 0-6.2 0C6.5 2.8 5.4 3.1 5.4 3.1a4.2 4.2 0 0 0-.1 3.2A4.6 4.6 0 0 0 4 9.5c0 4.6 2.7 5.7 5.5 6-.6.6-.6 1.2-.5 2V21" />
          </svg>
          Code
        </a>
      )}
    </div>
  </div>
</article>

<style>
  .video-card {
    display: grid;
    gap: 1rem;
    transition: transform 0.2s ease;
  }

  .video-card:hover {
    transform: translateY(-4px);
  }

  .video-thumbnail {
    position: relative;
    display: block;
    border-radius: 0.5rem;
    overflow: hidden;
  }

  .play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 72px;
    height: 72px;
    color: rgb(var(--color-accent));
    opacity: 0;
    transition: opacity 0.2s ease;
  }

  .video-thumbnail:hover .play-button {
    opacity: 1;
  }

  img {
    width: 100%;
    height: auto;
    aspect-ratio: 16/9;
    object-fit: cover;
    transition: filter 0.2s ease;
  }

  .video-thumbnail:hover img {
    filter: brightness(0.7);
  }

  .content {
    display: grid;
    gap: 0.5rem;
  }

  h3 {
    font-size: 1.25rem;
    font-weight: 600;
    line-height: 1.4;
  }

  h3 a {
    color: inherit;
    text-decoration: none;
    transition: color 0.2s ease;
  }

  h3 a:hover {
    color: rgb(var(--color-accent));
  }

  .links {
    display: flex;
    gap: 1rem;
  }

  .link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: rgb(var(--color-accent));
    text-decoration: none;
    transition: opacity 0.2s ease;
  }

  .link:hover {
    opacity: 0.8;
  }

  svg {
    width: 24px;
    height: 24px;
  }
</style>