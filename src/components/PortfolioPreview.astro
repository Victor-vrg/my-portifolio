---
import type { CollectionEntry } from 'astro:content';

interface Props {
  project: CollectionEntry<'projetos'>;
}

const { data, id } = Astro.props.project;

// Format image path for proper loading
const imagePath = typeof data.thumbnail === 'string' 
  ? data.thumbnail 
  : data.thumbnail.src;
---

<a class="card" href={`/projetos/${data.slug}`}>
  <div class="content h-[20%]">
    <h3 class="title">{data.title}</h3>
    <p class="description">{data.description}</p>
  </div>
  <img class="h-[80%]"
    src={imagePath}
    alt={data.img_alt || ''}
    width="300"
    height="300"
    loading="lazy"
    decoding="async"
  />
  <div class="overlay">
    <span class="view-project">Ver Projeto</span>
  </div>
</a>

<style>
  .card {
    position: relative;
    display: block;
    height: 11rem;
    border-radius: 0.75rem;
    overflow: hidden;
    text-decoration: none;
    background: var(--gray-999);
    isolation: isolate;
    will-change: transform;
    transform: translateZ(0);
  }

  .card::before {
    content: '';
    position: absolute;
    inset: 0;
    background: var(--gradient-subtle);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 1;
  }

  .content {
    position: relative;
    z-index: 2;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 1rem;
  }

  .title {
    margin: 0;
    font-family: var(--font-brand);
    font-size: var(--text-lg);
    font-weight: 500;
    color: var(--gray-200);
    background: var(--gray-999);
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    transition: transform 0.3s ease, background-color 0.3s ease;
    will-change: transform;
  }

  .description {
    margin: 0;
    font-size: var(--text-sm);
    color: var(--gray-200);
    opacity: 0;
    transform: translateY(10px);
    transition: opacity 0.3s ease, transform 0.3s ease;
  }

  img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
    will-change: transform;
    z-index: 0;
  }

  .overlay {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(0, 0, 0, 0.5);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 2;
  }

  .view-project {
    color: var(--gray-100);
    font-size: var(--text-lg);
    font-weight: 500;
    transform: translateY(20px);
    transition: transform 0.3s ease;
  }

  /* Hover effects */
  .card:hover::before {
    opacity: 1;
  }

  .card:hover img {
    transform: scale(1.05);
  }

  .card:hover .title {
    transform: translateY(-5px);
    background-color: var(--accent-regular);
  }

  .card:hover .description {
    opacity: 1;
    transform: translateY(0);
  }

  .card:hover .overlay {
    opacity: 1;
  }

  .card:hover .view-project {
    transform: translateY(0);
  }

  /* Loading optimization */
  .card:not(:has(img))::before {
    background: var(--gradient-subtle);
    opacity: 1;
  }

  @media (min-width: 50em) {
    .card {
      height: 22rem;
      border-radius: 1.5rem;
    }

    .title {
      border-radius: 0.9375rem;
    }

    .content {
      padding: 1.5rem;
    }
  }

  /* Reduce motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .card,
    .card::before,
    .title,
    .description,
    img,
    .overlay,
    .view-project {
      transition: none;
    }
  }
</style>